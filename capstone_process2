library(data.table)
# misspelling=readLines("/Users/daxinggao/Desktop/misspelling.txt",warn=F)
# 
# mislist=NULL
# for(i in 1:length(misspelling)){
#   if(grepl("\\$",misspelling[i])){
#     name=misspelling[i]
#   }
#   else {mislist=c(mislist,misspelling[i])
#   names(mislist)[length(mislist)]=name}
# }
# names(mislist)=tolower(gsub("\\$","",names(mislist)))
# mislist=tolower(mislist)
# 
# mgsub=function(p,r,x){
#   for(i in 1:length(r)){
#     x=gsub(p[i],r[i],x)
#   }
#   return(x)
# }
# 
# correctmis=function(x){
#   mgsub(mislist,names(mislist),x)
# }

uni=fread("uni25.csv")
uniorder=uni[order(uni$Frequency,decreasing=T),]
unigram=uniorder[,2,with=F]
colnames(unigram)="prediction"
write.csv(unigram,"unig25.csv",row.names=F)

bi=fread("bi25.csv")
bitop=bi[order(bi$Frequency,decreasing=T)]
bitop$word1=sapply(strsplit(bitop$name," "),'[',1)
bitop$word2=sapply(strsplit(bitop$name," "),'[',2)
bitop=bitop[nchar(word2)>2]
bitop[nchar(word1)>2]
bigram=cbind(bitop$word1,bitop$word2)
colnames(bigram)=c("words","prediction")
bigram=data.table(bigram)
write.csv(bigram,"big25.csv",row.names = F)

tri=fread("tri25.csv")
tritop=tri[order(tri$Frequency,decreasing=T),]
tritop=tritop[Frequency>1]
tritop$word1=sapply(strsplit(tritop$name," "),'[',1)
tritop$word2=sapply(strsplit(tritop$name," "),'[',2)
tritop$word3=sapply(strsplit(tritop$name," "),'[',3)
tritop=tritop[nchar(word3)>2]
tritop[,word1:=ifelse(nchar(word1)>2,word1,"")]
tritop[,word2:=ifelse(nchar(word2)>2,word2,"")]
tritop$twoword=paste(tritop$word1,tritop$word2,sep=" ")
tritop[,twoword:=sapply(twoword,function(x)gsub("^\\s|\\s$","",x))]
tritop[,twoword:=sapply(twoword,function(x)gsub("\\s+"," ",x))]
tritop=tritop[nchar(twoword)>2]
trigram=cbind(tritop$twoword,tritop$word3)
colnames(trigram)=c("words","prediction")
trigram=data.table(trigram)
write.csv(trigram,"trig25.csv",row.names = F)

quan=fread("quan25.csv")
quantop=quan[order(quan$Frequency,decreasing=T),]
quantop=quantop[Frequency>1]
quantop$word1=sapply(strsplit(quantop$name," "),'[',1)
quantop$word2=sapply(strsplit(quantop$name," "),'[',2)
quantop$word3=sapply(strsplit(quantop$name," "),'[',3)
quantop$word4=sapply(strsplit(quantop$name," "),'[',4)
quantop=quantop[nchar(word4)>2]
quantop[,word1:=ifelse(nchar(word1)>2,word1,"")]
quantop[,word2:=ifelse(nchar(word2)>2,word2,"")]
quantop[,word3:=ifelse(nchar(word3)>2,word3,"")]
quantop$threeword=paste(quantop$word1,quantop$word2,quantop$word3,sep=" ")
quantop[,threeword:=sapply(threeword,function(x)gsub("^\\s|\\s$","",x))]
quantop[,threeword:=sapply(threeword,function(x)gsub("\\s+"," ",x))]
quantop=quantop[nchar(threeword)>2]
quangram=cbind(quantop$threeword,quantop$word4)
colnames(quangram)=c("words","prediction")
quangram=data.table(quangram)
# quangram$N=1
# quangram[,cumN:=cumsum(N),by=words]
#quang=quangram[cumN<6,1:2,with=F]

write.csv(quangram,"quang25.csv",row.names = F)
