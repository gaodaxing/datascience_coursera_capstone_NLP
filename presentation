---
title       : Next word prediction app
subtitle    : Coursera capstone project
author      : Daxing Gao
job         : 
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      # 
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---

## Objective

The main goal of this capstone project is to build a shiny application that is able to predict the next word. 

--- .class #id 

## Algorithom and model
I used 2-grams to 4-grams, drawn from 15% of English from blogs, news articles and Twitter.
I cleaned the text to remove things like punctuation, profane words, websites and stopwords.

--- .class #id 

Word prediction algorythm

    App is reading the input when "Submit‚Äù button is pressed or space key is pressed.
    Preprocessing input (lowering case, remove punctuation, trim white spaces, etc.)
    Looking up for all possible endings (among N-grams)
    Backing-of to the lower-grams applying reduction factor (0.4 for 2-grams, 0.16 for top unigrams).
    Put all predictions together, sort desc by probability and show the top-5 predicted words.
    If nothing found - the most common stopwords will be shown.


--- .class #id 
## Slide 3

How the app works:

    User inputs a phrase (as many words as she wants)
    App looks at the last 1-4 words in phrase
    App checks the database for phrases that match
    App gathers all the possible predicted words and displays the most likely one

How to use the app:

    Classic mode: Type into the text field, and click the button to see the predicted next word.
    
--- .class #id 

## Slide 4  
    User Interface Overview
    


